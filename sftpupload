CREATE TABLE transaction_event (
    id INT IDENTITY(1,1) PRIMARY KEY,
    source NVARCHAR(255),
    tradeId NVARCHAR(255),
    version INT,
    type NVARCHAR(50),
    batsSecurityId NVARCHAR(255),
    bookId NVARCHAR(255),
    buySell NVARCHAR(10),
    notional DECIMAL(18, 2),
    unitPrice DECIMAL(18, 2),
    currency NVARCHAR(3),
    traderId NVARCHAR(255),
    counterPartyId NVARCHAR(255),
    tradeDateUTC DATETIME
);

import org.jdbi.v3.sqlobject.statement.SqlUpdate;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.statement.SqlQuery;

import java.util.List;

public interface TransactionEventDao {
    
    @SqlUpdate("INSERT INTO transaction_event (source, tradeId, version, type, batsSecurityId, bookId, buySell, notional, unitPrice, currency, traderId, counterPartyId, tradeDateUTC) " +
               "VALUES (:source, :tradeId, :version, :type, :batsSecurityId, :bookId, :buySell, :notional, :unitPrice, :currency, :traderId, :counterPartyId, :tradeDateUTC)")
    void insert(@BindBean TransactionEvent transactionEvent);

    @SqlQuery("SELECT * FROM transaction_event WHERE id = :id")
    TransactionEvent findById(@Bind("id") int id);

    @SqlQuery("SELECT * FROM transaction_event")
    List<TransactionEvent> findAll();

    @SqlUpdate("UPDATE transaction_event SET source = :source, tradeId = :tradeId, version = :version, type = :type, batsSecurityId = :batsSecurityId, bookId = :bookId, " +
               "buySell = :buySell, notional = :notional, unitPrice = :unitPrice, currency = :currency, traderId = :traderId, counterPartyId = :counterPartyId, " +
               "tradeDateUTC = :tradeDateUTC WHERE id = :id")
    void update(@BindBean TransactionEvent transactionEvent);

    @SqlUpdate("DELETE FROM transaction_event WHERE id = :id")
    void deleteById(@Bind("id") int id);
}
